<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gang.practice.spring.dao.UserDao">
    <resultMap id="userResultMap" type="user">
        <id column="userId" property="userId"/>
        <result column="userName" property="userName"/>
        <result column="password" property="password"/>
        <result column="age" property="age"/>
        <result column="sex" property="age"/>
        <result column="birthday" property="birthday"/>
        <result column="mobile" property="mobile"/>
        <result column="address" property="address"/>
        <result column="creator" property="creator"/>
        <result column="createTime" property="createTime"/>
        <result column="updator" property="updator"/>
        <result column="updateTime" property="updateTime"/>
        <result column="isDel" property="isDel"/>
    </resultMap>
    <sql id="userColumns">
        userId,userName, password, age, sex, birthday, mobile, address,
        creator, createtime, updator, updatetime, isdel
    </sql>
    <!-- 添加操作 -->
    <insert id="addUser" parameterType="user" keyProperty="userId">
        INSERT INTO users (username, password, age, sex, birthday, mobile, address,
                           creator, createtime, updator, updatetime, isdel)
        VALUES (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{age,jdbcType=NUMERIC},
                #{sex,jdbcType=NUMERIC}, #{birthday,jdbcType=NUMERIC},
                #{mobile,jdbcType=VARCHAR},
                #{address,jdbcType=VARCHAR},
                #{creator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updator,jdbcType=VARCHAR},
                #{updateTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=NUMERIC})
    </insert>
    <select id="getUserList" resultMap="userResultMap">
        select
        <include refid="userColumns"/>
        from users
    </select>
    <select id="checkUser"  resultMap="userResultMap">
        select
        <include refid="userColumns"/>
        from users
        <where>
            <if test="null!=userName">
                and userName=#{userName}
            </if>
            <if test="null!=password">
                and password=#{password}
            </if>
        </where>
    </select>
    <select id="getUserInfo" resultMap="userResultMap">
        select
        <include refid="userColumns"/>
        from users
        <where>
            <if test="null!=userId">
                and userId=#{userId}
            </if>
        </where>
    </select>
    <delete id="deleteUser" >
        delete from users where userId=#{0}
    </delete>
</mapper>